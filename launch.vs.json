{
  "version": "0.2.1",
  "configurations": [
    {
      "name": "Gear (MacOS)",
      "type": "cppdbg",
      "debuggerFlavor": "lldb",
      "MIMode": "lldb",

      // macOS requirements:
      // - Install Homebrew: brew install llvm cmake ninja
      // - Build lldb-mi from https://github.com/lldb-tools/lldb-mi and install to /usr/local/bin/lldb-mi
      // - Add /usr/local/bin/lldb-mi and /usr/bin/lldb to System Settings → Privacy & Security → Developer Tools
      // - In Visual Studio: add "MacBook.local" as a Cross Platform Connection (Tools → Options → Cross Platform → Connection Manager)

      "miDebuggerPath": "/usr/local/bin/lldb-mi",
      "project": "CMakeLists.txt",
      "projectTarget": "Gear",
      "remoteMachineName": "adamsepp@MacBook.local",
      "program": "${remoteBuildRoot}/bin/Gear",
      "currentDir": "${remoteBuildRoot}/bin",
      "stopAtEntry": false,
      "args": [],
      "env": {}
    },
    {
      "name": "Gear (RasperryPi)",
      "type": "cppdbg",
      "MIMode": "gdb",

      // Raspberry Pi requirements:
      // - On the Pi: sudo apt install build-essential gdb cmake ninja-build rsync
      // - Make sure SSH is enabled (raspi-config)
      // - In Visual Studio: add "raspberrypi" (or IP) as a Cross Platform Connection with user "pi"

      "miDebuggerPath": "/usr/bin/gdb",
      "project": "CMakeLists.txt",
      "projectTarget": "Gear",
      "remoteMachineName": "adamsepp@raspberrypi",
      "program": "${remoteBuildRoot}/bin/Gear",
      "currentDir": "${remoteBuildRoot}/bin",
      "stopAtEntry": false,
      "args": [],
      "env": {}
    }
  ]
}
